[build-system]
build-backend = "setuptools.build_meta"
requires = [ "setuptools>=77.0.3" ]

[project]
name = "flake8-django-migrations"
version = "1.1.0"
description = "Flake8 plugin to lint for backwards incompatible database migrations"
readme = "README.md"
keywords = [
  "django",
  "flake8",
  "lint",
  "migrations",
]
license = "MIT"
authors = [
  { name = "Bruno Alla", email = "bruno.alla@festicket.com" },
]
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 1 - Planning",
  "Environment :: Console",
  "Framework :: Flake8",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Quality Assurance",
]

dependencies = [
  "astor>=0.1",
  "flake8>=3.7",
  "importlib-metadata>=0.9; python_version<'3.8'",
]
urls.repository = "https://github.com/browniebroke/flake8-django-migrations"
entry-points."flake8.extension".DM = "flake8_django_migrations:Plugin"

[dependency-groups]
dev = [
  "pytest>=8,<9",
  "pytest-cov>=6,<7",
]

[tool.ruff]
line-length = 88

lint.select = [
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "D",   # flake8-docstrings
  "E",   # pycodestyle
  "F",   # pyflake
  "I",   # isort
  "RUF", # ruff specific
  "S",   # flake8-bandit
  "UP",  # pyupgrade
  "W",   # pycodestyle
]
lint.ignore = [
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  "D107", # Missing docstring in `__init__`
  "D203", # 1 blank line required before class docstring
  "D212", # Multi-line docstring summary should start at the first line
  "D401", # First line of docstring should be in imperative mood
]
lint.per-file-ignores."tests/**/*" = [
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "S101",
]
lint.isort.known-first-party = [ "flake8_django_migrations" ]

[tool.pytest.ini_options]
addopts = "-v -Wdefault --cov=flake8_django_migrations"
pythonpath = [ "src" ]

[tool.coverage.run]
branch = true
source = [ "flake8_django_migrations" ]

[tool.coverage.report]
ignore_errors = true

[tool.semantic_release.branches.main]
match = "main"

[tool.semantic_release.branches.noop]
match = "(?!main$)"
prerelease = true

[tool.semantic_release]
version_toml = [ "pyproject.toml:project.version" ]
version_variables = [
  "src/flake8_django_migrations/__init__.py:__version__",
]
build_command = """
pip install uv
uv lock
git add uv.lock
uv build
"""

[tool.semantic_release.changelog]
exclude_commit_patterns = [
  "chore.*",
  "ci.*",
  "Merge pull request .*",
]

[tool.semantic_release.changelog.environment]
keep_trailing_newline = true
